{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Print dir to console": {
    "prefix": "dir",
    "body": ["console.dir('$1');", "$2"],
    "description": "Log output to console"
  },
  "Loggin' map": {
    "prefix": "maplog",
    "body": [".map(a => { console.log(a); return a; })"],
    "description": "Log array to console"
  },
  ".map": {
    "prefix": "map",
    "body": ["$1.map(($2) => { $3 })"],
    "description": "Log output to console"
  },
  "Import prop types": {
    "prefix": "iprop",
    "body": ["import PropTypes from 'prop-types';"],
    "description": "Imports PropTypes for React"
  },
  "Import from lodash": {
    "prefix": "ilodash",
    "body": ["import $1 from 'lodash/$1';"],
    "description": "Imports something from lodash"
  },
  "Testcase": {
    "prefix": "mtest",
    "body": ["describe('$1', () => {\n  it('$2', () => {\n    $0\n  });\n});"],
    "description": "Make test case stub"
  },
  "Component function": {
    "prefix": "mcomponent",
    "body": ["const $1 = ({ $2 }} => (<div>$3</div>);"],
    "description": "Make component function"
  },
  "Import Redux FUUUUUU": {
    "prefix": "iredux",
    "body": [
      "import { connect } from 'react-redux';",
      "import { bindActionCreators } from 'redux';"
    ],
    "description": "Make component function"
  },
  "Make map to state, dispatch Redux": {
    "prefix": "mredux",
    "body": [
      "const mapStateToProps = state => ({ $1 })",
      "",
      "const mapDispatchToProps = dispatch => bindActionCreators(Creators, dispatch);",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)($2);",
    ],
    "description": "Make component function"
  }
}
